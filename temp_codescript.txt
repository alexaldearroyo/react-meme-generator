// src/ActionsContainer.js:

import './ActionsContainer.css';
import React, { useEffect, useState } from 'react';
import TemplateSelector from './TemplateSelector';
import TextGenerator from './TextGenerator';

const ActionsContainer = ({ setShowImage, imageUrl }) => {
  const [inputText, setInputText] = useState('doge');
  const [topText, setTopText] = useState('Hello');
  const [bottomText, setBottomText] = useState('World');

  useEffect(() => {
    const encodedTopText = encodeURIComponent(topText);
    const encodedBottomText = encodeURIComponent(bottomText);
    setShowImage(inputText, encodedTopText, encodedBottomText);
  }, [inputText, topText, bottomText, setShowImage]);

  const handleDownloadClick = async () => {
    if (!imageUrl) return;

    try {
      const response = await fetch(imageUrl);
      if (!response.ok) {
        throw new Error('Failed to fetch image');
      }

      const blob = await response.blob();
      const url = window.URL.createObjectURL(blob);

      const link = document.createElement('a');
      link.href = url;
      link.download = 'meme.png';
      link.style.display = 'none';

      document.body.appendChild(link);
      link.click();

      window.URL.revokeObjectURL(url);
      document.body.removeChild(link);
    } catch (error) {
      console.error('Error downloading image:', error);
    }
  };

  const handleButtonClick = () => {
    const encodedTopText = encodeURIComponent(topText);
    const encodedBottomText = encodeURIComponent(bottomText);
    setShowImage(inputText, encodedTopText, encodedBottomText);
  };

  return (
    <div className="actions-container">
      <TemplateSelector handleButtonClick={(text) => setInputText(text)} />
      <TextGenerator
        topText={topText}
        handleTopTextChange={(e) => setTopText(e.target.value)}
        bottomText={bottomText}
        handleBottomTextChange={(e) => setBottomText(e.target.value)}
        handleGenerateClick={handleButtonClick}
        handleDownloadClick={handleDownloadClick}
        imageUrl={imageUrl}
      />
    </div>
  );
};

export default ActionsContainer;

----------------------------------------

// src/TextGenerator.js:

import './TextGenerator.css';
import React from 'react';

const TextRow = ({ label, id, value, handleChange }) => (
  <div className={`${id}-container`}>
    <label htmlFor={id} className={`${id}-label`}>
      {label}
    </label>
    <input
      id={id}
      placeholder={`Enter ${label.toLowerCase()}`}
      value={value}
      onChange={handleChange}
    />
  </div>
);

const TextGenerator = ({
  topText,
  handleTopTextChange,
  bottomText,
  handleBottomTextChange,
  handleGenerateClick,
  handleDownloadClick,
}) => (
  <div className="text-generator-container common-width">
    <TextRow
      label="Top text"
      id="top-text"
      value={topText}
      handleChange={handleTopTextChange}
    />
    <TextRow
      label="Bottom text"
      id="bottom-text"
      value={bottomText}
      handleChange={handleBottomTextChange}
    />
    <div className="button-container">
      <button className="text-button" onClick={handleGenerateClick}>
        Generate
      </button>
      <button className="text-button" onClick={handleDownloadClick}>
        Download
      </button>
    </div>
  </div>
);

export default TextGenerator;

----------------------------------------

